name: CI
on:
  pull_request:
    paths:
      - 'go.mod'
      - 'go.sum'
      - '**.go'
      - '.github/workflows/**.yml'
  push:
    branches: [main, master]
    paths:
      - 'go.mod'
      - 'go.sum'
      - '**.go'
      - '.github/workflows/**.yml'

env:
  GO_VERSION: '1.23'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.61.0
          args: --timeout=10m --out-format=color-line-number
          skip-error: true # 允许警告通过

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.23'] # 限制为最新版本以减少兼容性问题

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Run tests
        run: go test -coverprofile=coverage.txt ./...
        shell: bash  # 强制使用 bash，确保路径兼容

      - name: Upload coverage reports to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.23'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: feymanlee/storeit

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: go build -v ./...

  all-checks:
    name: All Checks Passed
    needs: [lint, test, build]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Confirm all checks passed
        run: echo "All checks passed!"