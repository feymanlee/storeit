name: Unit-Tests
on:
  pull_request:
    paths:
      - 'go.mod'
      - '**.go'
      - '**.yml'
  push:
    paths:
      - 'go.mod'
      - '**.go'
      - '**.yml'

jobs:
  test:
    name: Test on go ${{ matrix.go_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go_version: [1.18, 1.19, '1.20']

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go_version }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Revive check
        uses: morphy2k/revive-action@v2.5.1
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.go_version == '1.18' }}

      - name: Static check
        uses: reviewdog/action-staticcheck@v1
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.go_version == '1.18'  }}
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-check
          filter_mode: added
          fail_on_error: false

      - name: Run Unit tests
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            go test -v -coverprofile="profile.cov" ./...
          else
            go test -v -coverprofile=profile.cov ./...
          fi

      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          path-to-profile: profile.cov
          flag-name: Go-${{ matrix.go_version }}
          parallel: true

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true
